#BlueJ class context
comment0.params=foodRate\ foodValue\ mutationRate\ speed\ pixelSize
comment0.target=Simulator(int,\ int,\ double,\ int,\ int)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Simulator\r\n
comment1.params=bs\ sC\ mC\ tC
comment1.target=Simulator(int,\ int,\ int,\ int)
comment10.params=
comment10.target=double\ refreshMutationRate()
comment11.params=speed
comment11.target=void\ setSpeed(int)
comment12.params=foodRate
comment12.target=void\ setFoodRate(int)
comment13.params=foodValue
comment13.target=void\ setFoodValue(int)
comment14.params=mutationRate
comment14.target=void\ setMutationRate(double)
comment15.params=
comment15.target=double\ getColorVar()
comment16.params=cVar
comment16.target=void\ setColorVar(double)
comment17.params=
comment17.target=int\ getSightRange()
comment18.params=sightR
comment18.target=void\ setSightRange(int)
comment19.params=x\ y
comment19.target=boolean\ isFood(int,\ int)
comment2.params=
comment2.target=void\ pause()
comment20.params=point
comment20.target=boolean\ isFood(java.awt.Point)
comment21.params=x\ y
comment21.target=void\ addFood(int,\ int)
comment22.params=x\ y
comment22.target=void\ removeFood(int,\ int)
comment23.params=
comment23.target=void\ clearFood()
comment24.params=x\ y
comment24.target=boolean\ isFoodU(int,\ int)
comment25.params=x\ y
comment25.target=boolean\ isFoodD(int,\ int)
comment26.params=x\ y
comment26.target=boolean\ isFoodR(int,\ int)
comment27.params=x\ y
comment27.target=boolean\ isFoodL(int,\ int)
comment28.params=string
comment28.target=java.lang.String\ toString(java.lang.String[])
comment29.params=dna
comment29.target=void\ addCritter(java.lang.String)
comment3.params=
comment3.target=void\ unpause()
comment30.params=dna\ number
comment30.target=void\ addCritter(java.lang.String,\ int)
comment31.params=critter
comment31.target=void\ addCritter(Critter)
comment32.params=critter
comment32.target=void\ moveCritter(Critter)
comment33.params=critter
comment33.target=void\ findElse(Critter)
comment34.params=critter
comment34.target=void\ findEnd(Critter)
comment35.params=critter
comment35.target=void\ critterTimeStep(Critter)
comment36.params=point
comment36.target=void\ addBarrier(java.awt.Point)
comment37.params=point
comment37.target=void\ removeBarrier(java.awt.Point)
comment38.params=x1\ y1\ x2\ y2
comment38.target=void\ addBarrierLine(int,\ int,\ int,\ int)
comment39.params=p1\ p2
comment39.target=void\ addBarrierGraph(java.awt.Point,\ java.awt.Point)
comment4.params=
comment4.target=boolean\ isPaused()
comment40.params=x1\ y1\ x2\ y2
comment40.target=void\ removeBarrierLine(int,\ int,\ int,\ int)
comment41.params=
comment41.target=void\ gameTimeStep()
comment42.params=steps
comment42.target=void\ gameTimeStep(int)
comment43.params=milliseconds
comment43.target=void\ wait(int)
comment5.params=s
comment5.target=void\ setBoardSize(int)
comment6.params=sC
comment6.target=void\ setSleepCost(int)
comment7.params=mC
comment7.target=void\ setMoveCost(int)
comment8.params=tC
comment8.target=void\ setTurnCost(int)
comment9.params=
comment9.target=int[]\ refresh()
numComments=44
